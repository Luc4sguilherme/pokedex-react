{"version":3,"sources":["utils/getPokemonImage.js","components/card/index.js","services/pokeapi.js","pages/Home/index.js","pages/Pokemon/index.js","App.js","index.js"],"names":["getPokemonImage","sprites","other","dream_world","front_default","Card","props","navigate","useNavigate","elementTypes","types","map","typesInfo","type","name","className","onClick","src","alt","id","join","BASE_URL","limit","offset","a","fetch","response","json","data","getPokemon","pokemon","Home","useState","gridColumnCount","setGridColumnCount","pokemons","setPokemons","setOffset","hasMore","setHasMore","fetchMoreData","length","getPokemons","then","results","Promise","all","useEffect","grid","document","querySelector","gridColumn","window","getComputedStyle","getPropertyValue","split","dataLength","next","loader","style","justifySelf","padding","Pokemon","PokemonName","useParams","setPokemon","weight","height","stats","sprite","fetchData","String","padStart","width","viewBox","version","xmlns","xmlnsXlink","stroke","strokeWidth","fill","fillRule","transform","opacity","points","base_stat","stat","RoutesContainer","path","element","ReactDOM","render","App","getElementById"],"mappings":"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","file":"static/js/main.70974714.chunk.js","sourcesContent":["const getPokemonImage = (sprites) => {\n  if (sprites.other.dream_world.front_default !== null) {\n    return sprites.other.dream_world.front_default\n  } else if (sprites.other[\"official-artwork\"].front_default !== null) {\n    return sprites.other[\"official-artwork\"].front_default\n  } else {\n    return sprites.front_default\n  }\n}\n\nexport default getPokemonImage","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport getPokemonImage from \"../../utils/getPokemonImage\";\n\nimport \"./styles.css\";\n\nfunction Card(props) {\n  const navigate = useNavigate();\n  const elementTypes = props.types.map((typesInfo) => typesInfo.type.name);\n\n  return (\n    <div\n      className={`card ${elementTypes[0]}`}\n      onClick={() => navigate(`/pokemon/${props.name}`)}\n    >\n      <img\n        className=\"card-image\"\n        src={`${getPokemonImage(props.sprites)}`}\n        alt={`${props.name}`}\n      />\n      <h2 className=\"card-title\">{`${props.id}. ${props.name}`}</h2>\n      <p className=\"card-subtitle\">{`${elementTypes.join(\" | \")}`}</p>\n    </div>\n  );\n}\n\nexport default Card;\n","const BASE_URL = \"https://pokeapi.co/api/v2/pokemon\";\n\nexport async function getPokemons(limit, offset) {\n  const response = await fetch(`${BASE_URL}?limit=${limit}&offset=${offset}`);\n  const data = await response.json();\n\n  return data;\n}\n\nexport async function getPokemon(name) {\n  const response = await fetch(`${BASE_URL}/${name}`);\n  const pokemon = await response.json();\n\n  return pokemon;\n}\n","import React, { useEffect, useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nimport Card from \"../../components/card\";\nimport { getPokemon, getPokemons } from \"../../services/pokeapi\";\n\nimport \"./style.css\";\n\nconst amountOfPoKemons = 1126;\nconst limit = 50;\n\nfunction Home() {\n  let [gridColumnCount, setGridColumnCount] = useState(1);\n  let [pokemons, setPokemons] = useState([]);\n  let [offset, setOffset] = useState(0);\n  let [hasMore, setHasMore] = useState(true);\n\n  const fetchMoreData = () => {\n    if (pokemons.length >= amountOfPoKemons) {\n      setHasMore(false);\n      return;\n    }\n\n    getPokemons(limit, offset).then(({ results }) => {\n      Promise.all(results.map((data) => getPokemon(data.name))).then(\n        (pokemon) => {\n          setPokemons([...pokemons, ...pokemon]);\n        }\n      );\n    });\n\n    setOffset(offset + limit);\n  };\n\n  useEffect(() => {\n    fetchMoreData();\n  }, []);\n\n  useEffect(() => {\n    const grid = document.querySelector(\".pokedex\");\n    const gridComputedStyle = window.getComputedStyle(grid);\n    const gridColumn = gridComputedStyle\n      .getPropertyValue(\"grid-template-columns\")\n      .split(\" \");\n    setGridColumnCount(gridColumn.length);\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Pokédex</h1>\n      <InfiniteScroll\n        className=\"pokedex\"\n        dataLength={pokemons.length}\n        next={fetchMoreData}\n        hasMore={hasMore}\n        loader={\n          <div\n            style={{\n              gridColumn: `span ${gridColumnCount}`,\n              justifySelf: \"center\",\n              padding: \"15px\",\n            }}\n          >\n            <div className=\"loader\"></div>\n          </div>\n        }\n      >\n        {pokemons.map((pokemon) => (\n          <Card\n            key={pokemon.id}\n            id={pokemon.id}\n            name={pokemon.name}\n            types={pokemon.types}\n            sprites={pokemon.sprites}\n          />\n        ))}\n      </InfiniteScroll>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nimport { getPokemon } from \"../../services/pokeapi\";\nimport getPokemonImage from \"../../utils/getPokemonImage\";\n\nimport \"./style.css\";\n\nfunction Pokemon() {\n  const { name: PokemonName } = useParams();\n  const [pokemon, setPokemon] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    async function fetchData() {\n      const { id, weight, height, name, types, stats, sprites } = await getPokemon(PokemonName);\n\n      setPokemon({\n        sprite: getPokemonImage(sprites),\n        id,\n        weight,\n        height,\n        name,\n        types,\n        stats,\n      });\n    }\n\n    fetchData();\n  }, [PokemonName]);\n\n  return (\n    <>\n      {pokemon && (\n        <div className=\"pokemon-container\">\n          <div className=\"pokemon-wrapper\">\n            <div className=\"pokemon-wrapper-top\">\n              <h1 className=\"pokemon-name\">\n                {pokemon.name}\n                <span> Nº{String(pokemon.id).padStart(3, 0)}</span>\n              </h1>\n              <button className=\"back-btn\" onClick={() => navigate(\"/\")}>\n                <svg\n                  width=\"13px\"\n                  height=\"20px\"\n                  viewBox=\"0 0 13 20\"\n                  version=\"1.1\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                >\n                  <g\n                    id=\"Icons\"\n                    stroke=\"none\"\n                    strokeWidth={1}\n                    fill=\"none\"\n                    fillRule=\"evenodd\"\n                  >\n                    <g\n                      id=\"Outlined\"\n                      transform=\"translate(-581.000000, -3434.000000)\"\n                    >\n                      <g\n                        id=\"Navigation\"\n                        transform=\"translate(100.000000, 3378.000000)\"\n                      >\n                        <g\n                          id=\"Outlined-/-Navigation-/-arrow_back_ios\"\n                          transform=\"translate(476.000000, 54.000000)\"\n                        >\n                          <g>\n                            <polygon\n                              id=\"Path\"\n                              opacity=\"0.87\"\n                              points=\"0 0 24 0 24 24 0 24\"\n                            />\n                            <polygon\n                              id=\"🔹-Icon-Color\"\n                              fill=\"#1D1D1D\"\n                              points=\"17.51 3.87 15.73 2.1 5.84 12 15.74 21.9 17.51 20.13 9.38 12\"\n                            />\n                          </g>\n                        </g>\n                      </g>\n                    </g>\n                  </g>\n                </svg>\n              </button>\n            </div>\n            <img\n              className=\"pokemon-image\"\n              src={`${pokemon.sprite}`}\n              alt={`${pokemon.name}`}\n            />\n            <div className=\"pokemon-infos\">\n              <div className=\"pokemon-types\">\n                Types:\n                {pokemon.types.map(({ type }) => (\n                  <div id=\"pokemon-type\" className={`${type.name}`}>\n                    {type.name}\n                  </div>\n                ))}\n              </div>\n\n              <div>\n                Weight: <span>{pokemon.weight / 10} kg</span>\n              </div>\n              <div>\n                Height: <span>{pokemon.height / 10} m</span>\n              </div>\n\n              {pokemon.stats.map(({ base_stat, stat }) => {\n                const { name } = stat;\n\n                return (\n                  <div className=\"pokemon-stats\" key={name}>\n                    {name}: <span>{base_stat}</span>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Pokemon;\n","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nimport \"./global.css\";\n\nimport Home from \"./pages/Home\";\nimport Pokemon from \"./pages/Pokemon\";\n\nfunction RoutesContainer() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/pokemon/:name\" element={<Pokemon />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default RoutesContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}